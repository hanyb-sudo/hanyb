多任务实现原理：
通常我们会设计Master-Worker模式，Master负责分配任务，
Worker负责执行任务，因此，多任务环境下，通常是一个Master，多个Worker

进程：
主进程是Master，其他进程就是Worker

优点：
1、稳定性高，一个子进程崩溃了，不会影响主进程和其他子进程，
2、当然主进程挂了所有子进程就全挂了，但是Master进程只负责分配任务，挂掉的概率低。

缺点：
1、创建进程的代价大，再Unix/Linux系统下，用fork调用还行，在Windows下创建进程开销巨大
2、操作系统能同时运行的进程数也是有限的，在内存和CPU的限制下，如果有几千个进程同时运行，操作系统调度都会成问题

线程：
主线程就是Master，其他线程就是Worker

优点：
1、多线程模式通常比多进程快一点，但是也快不到哪去
2、在Windows下，多线程就的效率比多进程要高

缺点：
任何一个线程挂掉都可能造成整个进程崩溃，所有线程共享进程的内存。
在Windows上，如果一个线程执行的代码出了问题，你经常可以看到这样的提示：
“该程序执行了非法操作，即将关闭”，其实往往是某个线程出了问题。但是操作系统会强制结束整个进程


