Django对各种数据库提供了很好的支持，
Django为这些数据库提供了统一的调用API，
可以根据不同的业务需求选择不同的数据库

配置数据库：
1）修改工程目录下的__init__.py文件：
import pymysql
pymysql.version_info = (1, 3, 13, "final", 0)
pymysql.install_as_MySQLdb()

2）修改setting.py文件下的DATABASES:
DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.mysql',
        'NAME': 'hanyb',
        'USER': 'root',
        'PASSWORD': '123',
        'HOST': 'localhost',
        'PORT': '3306',
    }
}


开发流程：
1）配置数据库
2)定义模型类
3)生成迁移文件
4)执行迁移生成数据表
5)使用模型类进行增删改查


ORM：
1）概述：对象-关系-映射

2）任务：
根据对象的类型生成表结构
将对象、列表的操作转换为sql语句
将sql语句查询到的结果转换为对象、列表

3）优点：
极大的减轻了开发人员的工作量，不需要面对因数据库的变更修改代码



